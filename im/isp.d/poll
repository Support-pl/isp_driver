#!/usr/bin/env ruby

# -------------------------------------------------------------------------- #
# Copyright 2018, IONe Cloud Project, Support.by                             #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
# -------------------------------------------------------------------------- #

ONE_LOCATION=ENV["ONE_LOCATION"] if !defined?(ONE_LOCATION)

if !ONE_LOCATION
    RUBY_LIB_LOCATION="/usr/lib/one/ruby" if !defined?(RUBY_LIB_LOCATION)
else
    RUBY_LIB_LOCATION=ONE_LOCATION+"/lib/ruby" if !defined?(RUBY_LIB_LOCATION)
end

$: << RUBY_LIB_LOCATION


require 'opennebula'
require 'isp_driver/lib_isp_driver'

host = ARGV[4]

host = OpenNebula::Host.new_with_id host, OpenNebula::Client.new
host.info!

isp_driver = ISPDriver::Client.new host.id
poll_data = isp_driver.poll

vms = host.to_hash['HOST']['VMS']['ID']
vms = [vms].compact if vms.class != Array

vms = vms.inject({}) do | r, vm |
    vm = OpenNebula::VirtualMachine.new_with_id vm, OpenNebula::Client.new
    vm.info!

    r[vm.deploy_id] = vm.id
    r
end

puts "HYPERVISOR=isp"
puts "VM_POLL=YES"
puts "LAST_PERF_POLL=#{Time.now.to_i}"
poll_data.each do | vm |
    deploy_id = !vms[vm[:deploy_id]].nil? ? vms[vm[:deploy_id]] : "-1"
    puts isp_driver.generate_poll_data(vm, deploy_id)
end